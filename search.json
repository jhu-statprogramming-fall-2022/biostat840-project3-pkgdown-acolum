[{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"how-to-load-the-beepr-package","dir":"Articles","previous_headings":"","what":"How to Load the beepr Package","title":"Example-analysis","text":"installation, can load beepr package following command:","code":"library(beepr)"},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example Analysis","title":"Example-analysis","text":"demonstrate use functions beepr package, conduct example analysis.","code":""},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"question","dir":"Articles","previous_headings":"Example Analysis","what":"Question","title":"Example-analysis","text":"U.S. Winter Olympic medalists’ ages compare across sexes sports?","code":""},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"original-data","dir":"Articles","previous_headings":"Example Analysis","what":"Original Data","title":"Example-analysis","text":"original data analysis olympics dataset TidyTuesday.","code":""},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"description","dir":"Articles","previous_headings":"Example Analysis > Original Data","what":"Description","title":"Example-analysis","text":"According olympics dataset’s documentation, data contains information athletic participants medal wins modern Olympic Games (Athens 1896 Rio 2016).","code":""},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"data-dictionary","dir":"Articles","previous_headings":"Example Analysis > Original Data","what":"Data Dictionary","title":"Example-analysis","text":"documentation olympics dataset provides helpful data dictionary.","code":""},{"path":[]},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"loading-the-data-into-r","dir":"Articles","previous_headings":"Example Analysis > Analysis","what":"Loading the Data into R","title":"Example-analysis","text":"First, need load necessary packages olympics dataset.","code":"# Load the `here`, `tidytuesdayR`, and `tidyverse` packages library(here) library(tidytuesdayR) library(tidyverse)  # Play a random sound once all of the packages have been loaded beepr::beep(0) # Test if a \"data\" directory exists locally; if not, create it if(!dir.exists(here(\"data\"))) { dir.create(here(\"data\")) }  # Save the data only once (not each time the R Markdown document is knit) if(!file.exists(here(\"data\",\"olympics.rda\"))) {   url_csv <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-07-27/olympics.csv'   olympics <- read_csv(url_csv)      # Save the olympics file to an rda object   save(olympics, file = here(\"data\",\"olympics.rda\"), version = 2) } # Read in the data locally (each time the R Markdown document is knit) olympics <- load(here::here(\"data\",\"olympics.rda\"))"},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"data-wrangling","dir":"Articles","previous_headings":"Example Analysis > Analysis","what":"Data Wrangling","title":"Example-analysis","text":"wrangle olympics dataset, primarily use tidyverse packages. visualizing data, explore different ways. expected sex sport character vectors, age numeric vector. many distinct observations vector? ’s interesting note 13 different Winter Olympic sports represented dataset, implies 13 different Winter Olympic sports U.S. athletes won medal .","code":"# Wrangling the Olympics data wrangled_olympics <- olympics %>%    # Remove NA values from all columns (only leaves medal winners)   tidyr::drop_na() %>%    # Filter to only include observations from US athletes, Winter games   dplyr::filter(noc == \"USA\",                 season == \"Winter\") %>%    # Replace \"M\" with \"Male\", \"F\" with \"Female\",    dplyr::mutate(     sex = dplyr::if_else(sex == \"M\",                           \"Male\", \"Female\")   ) %>%    # Select only the variables relevant for this analysis   dplyr::select(sex, sport, age)     # Play a sound if glimpsing the new, wrangled dataset produces an error beepr::beep_on_error(dplyr::glimpse(wrangled_olympics)) #> Rows: 508 #> Columns: 3 #> $ sex   <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Female\"… #> $ sport <chr> \"Figure Skating\", \"Ice Hockey\", \"Figure Skating\", \"Ice Hockey\", … #> $ age   <dbl> 28, 23, 24, 23, 14, 24, 31, 23, 23, 22, 28, 20, 21, 25, 21, 29, … # Find the class of each column of the new, wrangled dataset wrangled_olympics %>%    purrr::map_chr(class) #>         sex       sport         age  #> \"character\" \"character\"   \"numeric\" # Find the number of distinct obs. in each column of the new, wrangled dataset wrangled_olympics %>%    purrr::map_dbl(n_distinct) #>   sex sport   age  #>     2    13    26"},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"data-visualization","dir":"Articles","previous_headings":"Example Analysis > Analysis","what":"Data Visualization","title":"Example-analysis","text":"visualize olympics dataset, use ggplot2 package. start, let’s look average ages compare male female U.S. medalists Winter Olympic games.  Although means male female medalists’ ages similar, male medalists appear slightly older female medalists. answer question, let’s look U.S. medalists’ ages compare different winter sports.  Regardless sex, figure skating youngest winners, ice hockey oldest among U.S. Winter Olympic medalists. Now, let’s look winter sports U.S. medalist sexes. U.S. Winter Olympic medalists’ ages spread two variables?  Winter Olympic sports, male U.S. medalists tend older female U.S. medalists. ’s also interesting note sports yet female medalists U.S. (e.g., Cross Country Skiing).","code":"ggplot(data = wrangled_olympics, mapping = aes(x = sex, y = age)) +   geom_bar(stat = \"summary\", fun.y = \"mean\", color = \"black\", fill = \"black\") +   scale_y_continuous(label = scales::comma) +   labs(title = \"Spread of Mean U.S. Winter Olympic Medalist Ages by Sex\",        subtitle = \"On average, male medalists tend to be slightly older than female medalists.\",        caption = \"Data Source: TidyTuesday\",        x = \"Sex\",        y = \"Mean Age (Years)\") +   theme_minimal() ggplot(data = wrangled_olympics, mapping = aes(sport, age, fill = sport)) +   geom_violin() +   scale_y_continuous(label = scales::comma) +   labs(title = \"Spread of U.S. Winter Olympic Medalist Ages by Sport\",        subtitle = \"Figure skating has the youngest winners, while ice hockey has the oldest.\",        caption = \"Data Source: TidyTuesday\",        x = \"Sport\",        y = \"Distribution of Age (Years)\") +   theme_minimal() +   theme(axis.text.x = element_text(angle = 90),         legend.position = \"none\") ggplot(data = wrangled_olympics, mapping = aes(sex, age, fill = sex)) +   geom_boxplot(alpha = 0.5) +   scale_y_continuous(label = scales::comma) +   labs(title = \"Spread of U.S. Winter Olympic Medalist Ages by Sex and Sport\",        subtitle = \"In most sports, male winners tend to be older than female winners.\",        caption = \"Data Source: TidyTuesday\",        x = \"Sex\",        y = \"Distribution of Age (Years)\",        fill = \"Sex\") +   theme_minimal() +   facet_wrap(vars(sport))"},{"path":"https://acolum.github.io/beepr/articles/Example-analysis.html","id":"summary-of-results","dir":"Articles","previous_headings":"Example Analysis > Analysis","what":"Summary of Results","title":"Example-analysis","text":"majority Winter Olympic sports, means overall distributions U.S. male medalists’ ages greater U.S. female medalists’ ages. Regardless sex, figure skating winter sport youngest winners, ice hockey oldest among Winter Olympic U.S. medalists.","code":""},{"path":[]},{"path":"https://acolum.github.io/beepr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rasmus Bååth. Author, maintainer. Amanda Dobbyn. Contributor.","code":""},{"path":"https://acolum.github.io/beepr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bååth R (2022). beepr: Easily Play Notification Sounds Platform. https://github.com/rasmusab/beepr, https://acolum.github.io/beepr/.","code":"@Manual{,   title = {beepr: Easily Play Notification Sounds on any Platform},   author = {Rasmus Bååth},   year = {2022},   note = {https://github.com/rasmusab/beepr, https://acolum.github.io/beepr/}, }"},{"path":"https://acolum.github.io/beepr/index.html","id":"beepr-easily-play-notification-sounds-on-any-platform","dir":"","previous_headings":"","what":"Easily Play Notification Sounds on any Platform","title":"Easily Play Notification Sounds on any Platform","text":"Original Package Link: https://github.com/rasmusab/beepr Deployed Pkgdown Website: https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-acolum Original Package Author: Rasmus Bååth Author Pkgdown Website Example Data Analysis: Alyssa Columbus 7 settings customized pkgdown website bootswatch theme (changing “pulse”), color theme used syntax highlighting code blocks (changing “monochrome”), base font (changing “Roboto”), header font (changing “Roboto Slab”), code font (changing “JetBrains Mono”), navigation bars top page (switching left right defaults), footers (switching left right defaults). beepr R package contains one main function, beep(), one purpose: make easy play notification sounds whatever platform . intended useful, example, running long analysis background want know ready. derivative function, beep_on_error(), wraps expression beep error occurs expression evaluated. package previously called pingr included ping() function. renamed order confused Unix tool ping. rationale behind beepr see original announcement: http://sumsar.net/blog/2014/01/announcing-pingr/","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Play Notification Sounds on any Platform","text":"beepr available CRAN can installed within R running: can also grab development version beepr directly github:","code":"install.packages(\"beepr\") library(devtools) install_github(\"rasmusab/beepr\")"},{"path":"https://acolum.github.io/beepr/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Easily Play Notification Sounds on any Platform","text":"using Windows OS X beepr relies audio package sound playback external program needed. ’re Linux beepr relies either paplay utility Pulse Audio system, aplay utility ALSA system VLC media player installed PATH. Chances alread one . Debian/Ubuntu can otherwise get VLC running following terminal:","code":"sudo apt-get install vlc"},{"path":"https://acolum.github.io/beepr/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Easily Play Notification Sounds on any Platform","text":"beep() plays short sound useful want get notified, example, script finished. added bonus number different sounds choose .","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"usage","dir":"","previous_headings":"Details","what":"Usage","title":"Easily Play Notification Sounds on any Platform","text":"beep(sound = 1, expr = NULL)","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"arguments","dir":"","previous_headings":"Details","what":"Arguments","title":"Easily Play Notification Sounds on any Platform","text":"sound character string number specifying sound played either specifying one built sounds specifying path wav file. default 1. Possible sounds : “ping” “coin” “fanfare” “complete” “treasure” “ready” “shotgun” “mario” “wilhelm” “facebook” “sword” sound match sounds , valid path, random sound played. expr optional expression executed sound.","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"examples","dir":"","previous_headings":"Details","what":"Examples","title":"Easily Play Notification Sounds on any Platform","text":"","code":"# Update all packages and \"ping\" when it's ready update.packages(ask=FALSE); beep()  #Play a fanfare instead of a \"ping\". beep(\"fanfare\") #or beep(3)  # Play a random sound beep(0)  # Play a sound if an error occurs beep_on_error(1 + \"a\", sound = \"wilhelm\")"},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":null,"dir":"Reference","previous_headings":"","what":"Play a short sound — beep","title":"Play a short sound — beep","text":"beep plays short sound useful want get notified,  example, script finished. added bonus number  different sounds choose .","code":""},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Play a short sound — beep","text":"","code":"beep(sound = 1, expr = NULL)"},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Play a short sound — beep","text":"sound character string number specifying sound played  either specifying one built sounds, specifying path wav  file specifying url. default 1. Possible sounds : \"ping\" \"coin\" \"fanfare\" \"complete\" \"treasure\" \"ready\" \"shotgun\" \"mario\" \"wilhelm\" \"facebook\" \"sword\" sound match sounds , valid path url, random sound played. Currently beep can handle http urls, https supported. expr optional expression excecuted sound.","code":""},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Play a short sound — beep","text":"beep able play sound warning issued rather  error. order risk aborting stopping process wanted get notified .","code":""},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Play a short sound — beep","text":"","code":"# Play a \"ping\" sound beep() #> Warning: beep() could not play the sound due to the following error: #> Error in play.default(x, rate, ...): no audio drivers are available  if (FALSE) { # Play a fanfare instead of a \"ping\". beep(\"fanfare\") # or beep(3)  # Play a random sound beep(0)  # Update all packages and \"ping\" when it's ready update.packages(ask=FALSE); beep() }"},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Play a short sound if there is an error — beep_on_error","title":"Play a short sound if there is an error — beep_on_error","text":"beep_on_error wraps expression plays short sound  error occurs.","code":""},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Play a short sound if there is an error — beep_on_error","text":"","code":"beep_on_error(expr, sound = 1)"},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Play a short sound if there is an error — beep_on_error","text":"expr expression evaluated errors. sound character string number specifying sound played  either specifying one built sounds, specifying path wav  file specifying url. default 1. Possible sounds : \"ping\" \"coin\" \"fanfare\" \"complete\" \"treasure\" \"ready\" \"shotgun\" \"mario\" \"wilhelm\" \"facebook\" \"sword\" sound match sounds , valid path url, random sound played. Currently beep can handle http urls, https supported.","code":""},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Play a short sound if there is an error — beep_on_error","text":"beep able play sound warning issued rather  error. order risk aborting stopping process wanted get notified .","code":""},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Play a short sound if there is an error — beep_on_error","text":"","code":"# Play a \"ping\" sound if \\code{expr} produces an error beep_on_error(log(\"foo\")) #> An error occurred in log(\"foo\"): non-numeric argument to mathematical function #> Warning: beep() could not play the sound due to the following error: #> Error in play.default(x, rate, ...): no audio drivers are available  # Stay silent if \\code{expr} does not produce an error beep_on_error(log(1)) #> [1] 0  if (FALSE) { # Play the Wilhelm scream instead of a ping on error. beep_on_error(runif(\"bar\"), \"wilhelm\") }"},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily Play Notification Sounds on any Platform — beepr","title":"Easily Play Notification Sounds on any Platform — beepr","text":"package contains one function, beep(), one purpose: make easy play notification sounds whatever platform . intended useful, example, running long analysis background want know ready.","code":""},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Easily Play Notification Sounds on any Platform — beepr","text":"package contains one main function beep, check  see . sound Windows MacOS beepr depends  audio package. sound Linux beepr depends either paplay utility Pulse Audio system, aplay utility ALSA system, VLC media player (http://www.videolan.org/vlc/index.html) installed PATH. Chances already one .","code":""},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Easily Play Notification Sounds on any Platform — beepr","text":"Rasmus Bååth < rasmus.baath@gmail.com >","code":""},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily Play Notification Sounds on any Platform — beepr","text":"","code":"# Play a \"ping\" sound beep() #> Warning: beep() could not play the sound due to the following error: #> Error in play.default(x, rate, ...): no audio drivers are available"}]
