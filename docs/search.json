[{"path":"https://acolum.github.io/beepr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rasmus Bååth. Author, maintainer. Amanda Dobbyn. Contributor.","code":""},{"path":"https://acolum.github.io/beepr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bååth R (2022). beepr: Easily Play Notification Sounds Platform. https://github.com/rasmusab/beepr, https://acolum.github.io/beepr/.","code":"@Manual{,   title = {beepr: Easily Play Notification Sounds on any Platform},   author = {Rasmus Bååth},   year = {2022},   note = {https://github.com/rasmusab/beepr, https://acolum.github.io/beepr/}, }"},{"path":"https://acolum.github.io/beepr/index.html","id":"beepr-easily-play-notification-sounds-on-any-platform","dir":"","previous_headings":"","what":"Easily Play Notification Sounds on any Platform","title":"Easily Play Notification Sounds on any Platform","text":"beepr R package contains one main function, beep(), one purpose: make easy play notification sounds whatever platform . intended useful, example, running long analysis background want know ready. derivative function, beep_on_error(), wraps expression beep error occurs expression evaluated. package previously called pingr included ping() function. renamed order confused Unix tool ping. rationale behind beepr see original announcement: http://sumsar.net/blog/2014/01/announcing-pingr/","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Play Notification Sounds on any Platform","text":"beepr available CRAN can installed within R running: can also grab development version beepr directly github:","code":"install.packages(\"beepr\") library(devtools) install_github(\"rasmusab/beepr\")"},{"path":"https://acolum.github.io/beepr/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Easily Play Notification Sounds on any Platform","text":"using Windows OS X beepr relies audio package sound playback external program needed. ’re Linux beepr relies either paplay utility Pulse Audio system, aplay utility ALSA system VLC media player installed PATH. Chances alread one . Debian/Ubuntu can otherwise get VLC running following terminal:","code":"sudo apt-get install vlc"},{"path":"https://acolum.github.io/beepr/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Easily Play Notification Sounds on any Platform","text":"beep() plays short sound useful want get notified, example, script finished. added bonus number different sounds choose .","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"usage","dir":"","previous_headings":"Details","what":"Usage","title":"Easily Play Notification Sounds on any Platform","text":"beep(sound = 1, expr = NULL)","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"arguments","dir":"","previous_headings":"Details","what":"Arguments","title":"Easily Play Notification Sounds on any Platform","text":"sound character string number specifying sound played either specifying one built sounds specifying path wav file. default 1. Possible sounds : “ping” “coin” “fanfare” “complete” “treasure” “ready” “shotgun” “mario” “wilhelm” “facebook” “sword” sound match sounds , valid path, random sound played. expr optional expression executed sound.","code":""},{"path":"https://acolum.github.io/beepr/index.html","id":"examples","dir":"","previous_headings":"Details","what":"Examples","title":"Easily Play Notification Sounds on any Platform","text":"","code":"# Update all packages and \"ping\" when it's ready update.packages(ask=FALSE); beep()  #Play a fanfare instead of a \"ping\". beep(\"fanfare\") #or beep(3)  # Play a random sound beep(0)  # Play a sound if an error occurs beep_on_error(1 + \"a\", sound = \"wilhelm\")"},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":null,"dir":"Reference","previous_headings":"","what":"Play a short sound — beep","title":"Play a short sound — beep","text":"beep plays short sound useful want get notified,  example, script finished. added bonus number  different sounds choose .","code":""},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Play a short sound — beep","text":"","code":"beep(sound = 1, expr = NULL)"},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Play a short sound — beep","text":"sound character string number specifying sound played  either specifying one built sounds, specifying path wav  file specifying url. default 1. Possible sounds : \"ping\" \"coin\" \"fanfare\" \"complete\" \"treasure\" \"ready\" \"shotgun\" \"mario\" \"wilhelm\" \"facebook\" \"sword\" sound match sounds , valid path url, random sound played. Currently beep can handle http urls, https supported. expr optional expression excecuted sound.","code":""},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Play a short sound — beep","text":"beep able play sound warning issued rather  error. order risk aborting stopping process wanted get notified .","code":""},{"path":"https://acolum.github.io/beepr/reference/beep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Play a short sound — beep","text":"","code":"# Play a \"ping\" sound beep()  if (FALSE) { # Play a fanfare instead of a \"ping\". beep(\"fanfare\") # or beep(3)  # Play a random sound beep(0)  # Update all packages and \"ping\" when it's ready update.packages(ask=FALSE); beep() }"},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily Play Notification Sounds on any Platform — beepr","title":"Easily Play Notification Sounds on any Platform — beepr","text":"package contains one function, beep(), one purpose: make easy play notification sounds whatever platform . intended useful, example, running long analysis background want know ready.","code":""},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Easily Play Notification Sounds on any Platform — beepr","text":"package contains one main function beep, check  see . sound Windows MacOS beepr depends  audio package. sound Linux beepr depends either paplay utility Pulse Audio system, aplay utility ALSA system, VLC media player (http://www.videolan.org/vlc/index.html) installed PATH. Chances already one .","code":""},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Easily Play Notification Sounds on any Platform — beepr","text":"Rasmus Bååth < rasmus.baath@gmail.com >","code":""},{"path":"https://acolum.github.io/beepr/reference/beepr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily Play Notification Sounds on any Platform — beepr","text":"","code":"# Play a \"ping\" sound beep()"},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Play a short sound if there is an error — beep_on_error","title":"Play a short sound if there is an error — beep_on_error","text":"beep_on_error wraps expression plays short sound  error occurs.","code":""},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Play a short sound if there is an error — beep_on_error","text":"","code":"beep_on_error(expr, sound = 1)"},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Play a short sound if there is an error — beep_on_error","text":"expr expression evaluated errors. sound character string number specifying sound played  either specifying one built sounds, specifying path wav  file specifying url. default 1. Possible sounds : \"ping\" \"coin\" \"fanfare\" \"complete\" \"treasure\" \"ready\" \"shotgun\" \"mario\" \"wilhelm\" \"facebook\" \"sword\" sound match sounds , valid path url, random sound played. Currently beep can handle http urls, https supported.","code":""},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Play a short sound if there is an error — beep_on_error","text":"beep able play sound warning issued rather  error. order risk aborting stopping process wanted get notified .","code":""},{"path":"https://acolum.github.io/beepr/reference/beep_on_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Play a short sound if there is an error — beep_on_error","text":"","code":"# Play a \"ping\" sound if \\code{expr} produces an error beep_on_error(log(\"foo\")) #> An error occurred in log(\"foo\"): non-numeric argument to mathematical function  # Stay silent if \\code{expr} does not produce an error beep_on_error(log(1)) #> [1] 0  if (FALSE) { # Play the Wilhelm scream instead of a ping on error. beep_on_error(runif(\"bar\"), \"wilhelm\") }"}]
